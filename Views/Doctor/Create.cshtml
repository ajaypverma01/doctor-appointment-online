@model DoctorPatient.Models.DoctorModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Doctor</h4>
    <hr />
    @Html.ValidationSummary(true)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BirthDate, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BirthDate)
            @Html.ValidationMessageFor(model => model.BirthDate)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Sex, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Sex)
            @Html.ValidationMessageFor(model => model.Sex)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Department, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Department)
            @Html.ValidationMessageFor(model => model.Department)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Degree, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Degree)
            @Html.ValidationMessageFor(model => model.Degree)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.YearsOfExperience, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EnumDropDownListFor(model => model.YearsOfExperience)*@
            @Html.DropDownListFor(m => m.YearsOfExperience, Enumerable.Range(1, 40).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { placeholder = Html.DisplayNameFor(x => x.YearsOfExperience)})
            @Html.ValidationMessageFor(model => model.YearsOfExperience)
        </div>

       
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ConsultationFee, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.ConsultationFee)
            @Html.ValidationMessageFor(model => model.ConsultationFee)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.City, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.City)
            @Html.ValidationMessageFor(model => model.City)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Country, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Country)
            @Html.ValidationMessageFor(model => model.Country)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Address, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Address)
            @Html.ValidationMessageFor(model => model.Address)
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
